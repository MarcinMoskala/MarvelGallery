machine:
  java:
    version: oraclejdk8


dependencies:
  pre:
    # Install the android packages
    - echo y | android update sdk --no-ui --all --filter "extra-google-market_licensing,extra-google-play_billing"
    #  [HINT] Almost packages are pre installed: https://circleci.com/docs/build-image-precise/#android
  post:
    # Create the android emulator
    - echo n | android create avd -n test_android_17 -f -t android-17
    #  [HINT] Circle-CI already have built-in emulator (circleci-android22), but it's so heavy.
    # Make a SD Card image file for the android emulator
- mksdcard -l e 128M sdcard.img

test:
  pre:
    # Start the android emulator
    - emulator -avd test_android_17 -no-audio -no-boot-anim -no-window -sdcard sdcard.img:
        background: true
        parallel: true

  override:
    # Build instrumented test code
    # fix apk not build https://code.google.com/p/android/issues/detail?id=180689
    - ./gradlew assembleDebug

    # ensure that the emulator is ready to use
    - circle-android wait-for-boot
    # the necessary sleep duration may change with time and depends on the pre tasks length.
    # When all pre tasks are run long enough then waiting will not be necessary anymore.
    # This sleep should avoid the com.android.builder.testing.api.DeviceException: com.android.ddmlib.ShellCommandUnresponsiveException
    - sleep 60
    # at least remove the look screen
    - adb shell input keyevent 82

    # later we collect the logs from test run
    - adb logcat -d

    # execute tests on emulator
    - ./gradlew connectedCheck

    # Create coverage report
    - ./gradlew jacocoTestReport

    # copy test results
    - mv app/build/reports/tests/debug $CIRCLE_TEST_REPORTS/AppUnitTests
    - mv build/reports/jacoco/test/html $CIRCLE_TEST_REPORTS/CodeCoverageReport

    # circleCi proper test value feature
    - mkdir $CIRCLE_TEST_REPORTS/junit
    - find */build/test-results -name "*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
    - find */build/outputs/androidTest-results/ -name "*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;